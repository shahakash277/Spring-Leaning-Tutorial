package com.example.demo.repository;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Predicate;
import javax.persistence.criteria.Root;

import org.springframework.data.jpa.repository.support.SimpleJpaRepository;

import com.example.demo.model.Demo;

public class DemoRepositoryImpl  {

    protected Class<Demo> domainClass;
    protected EntityManager em;

    public DemoRepositoryImpl(Class<Demo> domainClass, EntityManager em) {
        super(domainClass, em);
        this.domainClass = domainClass;
        this.em = em;
    }

    public List<Demo> searchByQual() {
        CriteriaBuilder cb = em.getCriteriaBuilder();
        CriteriaQuery<Demo> query = cb.createQuery(Demo.class);
        Root<Demo> root = query.from(domainClass);
        Predicate id = cb.equal(root.get("id"), 2);
        query.where(id);
        TypedQuery<Demo> result = em.createQuery(query);
        return result.getResultList();
    }
}
